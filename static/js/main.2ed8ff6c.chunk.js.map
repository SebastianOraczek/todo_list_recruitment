{"version":3,"sources":["hooks/useInputState.js","hooks/useToggleState.js","styles/RegisterStyles.js","components/Register.js","styles/LoginStyles.js","components/Login.js","styles/NavbarStyles.js","components/Navbar.js","styles/TodoStyles.js","components/Todo.js","styles/TaskStyles.js","components/Task.js","contexts/TodosContext.js","styles/NewFormStyles.js","components/NewForm.js","styles/TodoListStyles.js","components/TodoList.js","components/TodoElement.js","TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["useInputState","initialVal","useState","state","setState","evt","target","value","useToggleState","styles","container","backgroundColor","width","marginTop","text","color","fontSize","fontWeight","letterSpacing","margin","display","justifyContent","inputBox","input","borderRadius","border","height","outline","buttonBox","marginBottom","button","arrow","transition","transform","withStyles","props","history","classes","username","changeUsername","email","changeEmail","password","changePassword","repPassword","changeRepPassword","isAlert","toggle","handleSubmit","a","preventDefault","user","fetch","method","headers","body","JSON","stringify","status","push","Alert","severity","onClose","Grid","alignItems","Paper","className","IconButton","onClick","goBack","onSubmit","type","placeholder","name","onChange","autoFocus","Button","variant","login","span","linkBox","link","textDecoration","identifier","setIdentifier","resetIdentifier","setPassword","resetPassword","res","json","promiseObj","window","localStorage","setItem","jwt","to","fontFamily","padding","logout","position","top","right","paddingTop","logoutIcon","withRouter","length","clear","item","create","complete","marginLeft","id","task","date","published","substr","split","reverse","join","completed","filter","t","isDone","uncompleted","ListItem","ListItemText","theme","box","taskInput","borderBottom","checkbox","taskIsDone","toggleTaskIsDone","editedTask","setEditedTask","Checkbox","tabIndex","checked","TodoListContext","createContext","TodosProvider","todoList","setTodoList","tasks","setTasks","listName","setListName","resetListName","isActive","toggleActive","allList","setAllList","setPublished","isSorted","toggleIsSorted","Provider","children","listInputBox","listInput","divider","addBtn","marginRight","cancelBtn","buttonBox2","saveBtn","cancelBtn2","deleteBtn","NewForm","toggleIsDone","taskName","setTaskName","resetTaskName","isAlertTask","toggleAlertTask","isAlertListName","toggleAlertListName","useContext","cancelTasks","handleCancelList","handleSave","getItem","axios","post","Authorization","handleRes","data","published_at","style","Dialog","open","DialogContent","Divider","map","i","key","memo","boxShadow","addBtnBox","bottom","inputsAbove","sortBtn","searchInput","paddingLeft","useEffect","get","then","handlePublished","catch","err","console","log","oneList","List","match","params","individualTaskName","setIndividualTaskName","setNewTask","setIsDone","url","saveList","put","deleteList","delete","defaultValue","TodoApp","background","minHeight","exact","path","render","routeProps","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2ed8ff6c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useInputState(initialVal) {\r\n    const [state, setState] = useState(initialVal);\r\n\r\n    const handleChange = evt => {\r\n        setState(evt.target.value)\r\n    };\r\n\r\n    const reset = () => {\r\n        setState(\"\");\r\n    };\r\n\r\n    return [state, handleChange, reset];\r\n};\r\n\r\nexport default useInputState;","import { useState } from \"react\";\r\n\r\nfunction useToggleState(initialVal) {\r\n    const [state, setState] = useState(initialVal);\r\n\r\n    const toggle = () => {\r\n        setState(!state);\r\n    };\r\n\r\n    return [state, toggle];\r\n};\r\n\r\nexport default useToggleState;","const styles = {\r\n    container: {\r\n        backgroundColor: \"#2b2c2c\",\r\n        width: \"400px\",\r\n        marginTop: \"2rem\",\r\n    },\r\n    text: {\r\n        color: \"#faa307\",\r\n        fontSize: \"30px\",\r\n        fontWeight: \"700\",\r\n        letterSpacing: \"1px\",\r\n        margin: \"0 0 3rem 0\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    inputBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n    input: {\r\n        borderRadius: \"0.3rem\",\r\n        border: \"none\",\r\n        width: \"100%\",\r\n        margin: \"0.5rem 3rem\",\r\n        height: \"20px\",\r\n        outline: \"none\"\r\n    },\r\n    buttonBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginBottom: \"3.5rem\",\r\n    },\r\n    button: {\r\n        backgroundColor: \"#faa307\",\r\n        color: \"white\",\r\n        margin: \"2rem 0\",\r\n        width: \"7.5rem\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#fab640\",\r\n        }\r\n    },\r\n    arrow: {\r\n        color: \"white\",\r\n        marginTop: \"0.3rem\",\r\n        transition: \"all 0.2s ease-in-out\",\r\n        \"&:hover\": {\r\n            transform: \"translateX(6px)\",\r\n        }\r\n    }\r\n};\r\n\r\nexport default styles;","import useInputState from \"../hooks/useInputState\";\r\nimport useToggleState from '../hooks/useToggleState';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from \"../styles/RegisterStyles\";\r\n\r\nfunction Register(props) {\r\n    const { history, classes } = props;\r\n    const [username, changeUsername] = useInputState(\"\");\r\n    const [email, changeEmail] = useInputState(\"\");\r\n    const [password, changePassword] = useInputState(\"\");\r\n    const [repPassword, changeRepPassword] = useInputState(\"\");\r\n    const [isAlert, toggle] = useToggleState(false);\r\n\r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (password && password === repPassword) {\r\n            const user = { username, email, password };\r\n\r\n            const url = \"https://recruitment.ultimate.systems/auth/local/register\";\r\n            const res = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(user)\r\n            });\r\n\r\n            res.status === 200\r\n                ? history.push(\"/login\")\r\n                : toggle();\r\n\r\n        } else {\r\n            toggle();\r\n        };\r\n    };\r\n\r\n    const backPage = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isAlert && (\r\n                <Alert severity=\"error\" onClose={toggle}>\r\n                    Something went wrong\r\n                </Alert>\r\n            )}\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n                <Paper className={classes.container}>\r\n                    <IconButton aria-label=\"Back\" className={classes.arrow} onClick={backPage}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <p className={classes.text}>Create an new account </p>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className={classes.inputBox}>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                name=\"Username\"\r\n                                value={username}\r\n                                onChange={changeUsername}\r\n                                autoFocus\r\n                                className={classes.input}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.inputBox}>\r\n                            <input\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                name=\"Email\"\r\n                                value={email}\r\n                                onChange={changeEmail}\r\n                                className={classes.input}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.inputBox}>\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                name=\"Password\"\r\n                                value={password}\r\n                                onChange={changePassword}\r\n                                className={classes.input}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.inputBox}>\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Repeat Password\"\r\n                                name=\"Repeat Password\"\r\n                                value={repPassword}\r\n                                onChange={changeRepPassword}\r\n                                className={classes.input}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.buttonBox}>\r\n                            <Button variant=\"contained\" type=\"submit\" className={classes.button}>\r\n                                Create\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </Paper>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Register);\r\n","const styles = {\r\n    container: {\r\n        backgroundColor: \"#2b2c2c\",\r\n        width: \"400px\",\r\n        marginTop: \"2rem\",\r\n    },\r\n    login: {\r\n        color: \"#faa307\",\r\n        fontSize: \"30px\",\r\n        fontWeight: \"700\",\r\n        letterSpacing: \"1px\",\r\n        margin: \"2rem 0 4rem 0\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    inputBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n    input: {\r\n        borderRadius: \"0.3rem\",\r\n        border: \"none\",\r\n        width: \"100%\",\r\n        margin: \"0.5rem 3rem\",\r\n        height: \"20px\",\r\n        outline: \"none\"\r\n    },\r\n    buttonBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    button: {\r\n        backgroundColor: \"#faa307\",\r\n        color: \"white\",\r\n        margin: \"1.5rem 0\",\r\n        width: \"7rem\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#fab610\",\r\n        }\r\n    },\r\n    span: {\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"15px\",\r\n        marginBottom: \"1.6rem\"\r\n    },\r\n    linkBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n    link: {\r\n        marginBottom: \"4rem\",\r\n        textDecoration: \"none\",\r\n        color: \"#faa307\",\r\n        fontSize: \"17px\",\r\n        transition: \"all 0.2s ease-in-out\",\r\n        \"&:hover\": {\r\n            color: \"#fab640\",\r\n            transform: \"translateY(-4px)\"\r\n        }\r\n    }\r\n};\r\n\r\nexport default styles;","import { Link } from \"react-router-dom\";\r\n\r\nimport useInputState from \"../hooks/useInputState\";\r\nimport useToggleState from \"../hooks/useToggleState\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from \"../styles/LoginStyles\";\r\n\r\nfunction Login(props) {\r\n    const { history, classes } = props;\r\n    const [identifier, setIdentifier, resetIdentifier] = useInputState(\"\");\r\n    const [password, setPassword, resetPassword] = useInputState(\"\");\r\n    const [isAlert, toggle] = useToggleState(false);\r\n\r\n    // Powstaje błąd-- > \"Can't perform a React state update on an unmounted component...\"\r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        const user = { identifier, password };\r\n\r\n        const url = \"https://recruitment.ultimate.systems/auth/local\";\r\n        const res = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(user)\r\n        })\r\n\r\n        const promiseObj = await res.json();\r\n        await window.localStorage.setItem(\"jwt\", promiseObj.jwt);\r\n\r\n        if (res.status === 200) {\r\n            window.localStorage.setItem(\"user\", JSON.stringify(user.identifier));\r\n            history.push(\"/lists\");\r\n            resetIdentifier();\r\n            resetPassword();\r\n        } else {\r\n            toggle();\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isAlert && (\r\n                <Alert severity=\"error\" onClose={toggle}>\r\n                    Incorrect login or password\r\n                </Alert >\r\n            )}\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n                <Paper className={classes.container} >\r\n                    <p className={classes.login}>Login</p>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className={classes.inputBox}>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Email or Username\"\r\n                                name=\"Email or Username\"\r\n                                autoFocus\r\n                                value={identifier}\r\n                                onChange={setIdentifier}\r\n                                className={classes.input}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.inputBox}>\r\n                            <input\r\n                                type=\"Password\"\r\n                                placeholder=\"Password\"\r\n                                name=\"Password\"\r\n                                className={classes.input}\r\n                                value={password}\r\n                                onChange={setPassword}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.buttonBox}>\r\n                            <Button variant=\"contained\" type=\"submit\" className={classes.button}>\r\n                                Login\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                    <span className={classes.span}>or</span>\r\n                    <div className={classes.linkBox}>\r\n                        <Link to=\"/register\" className={classes.link}>\r\n                            Create an new account\r\n                        </Link>\r\n                    </div>\r\n                </Paper >\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Login);","const styles = {\r\n    text: {\r\n        display: \"inline-block\",\r\n        color: \"#faa307\",\r\n        fontSize: \"30px\",\r\n        fontFamily: \"ZCOOL KuaiLe\",\r\n        padding: \"0.5rem 0.8rem\",\r\n        marginTop: \"0\",\r\n        fontWeight: \"400\",\r\n        letterSpacing: \"1px\"\r\n    },\r\n    logout: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        right: \"1.5rem\",\r\n        paddingTop: \"0.5rem\",\r\n        color: \"#faa307\",\r\n        transition: \"all 0.2s ease-in-out\",\r\n        \"&:hover\": {\r\n            transform: \"translateX(-7px)\",\r\n        }\r\n    },\r\n    logoutIcon: {\r\n        fontSize: \"2rem\",\r\n    }\r\n};\r\n\r\nexport default styles;","import { withRouter } from \"react-router\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from \"../styles/NavbarStyles\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nfunction Navbar(props) {\r\n    const { classes, history } = props;\r\n\r\n    const logout = () => {\r\n        window.localStorage.clear();\r\n        history.push(\"/login\");\r\n    };\r\n    return (\r\n        <div>\r\n            <p className={classes.text}>ToDo-List</p>\r\n            {window.localStorage.length >= 1\r\n                &&\r\n                (\r\n                    <IconButton onClick={logout} className={classes.logout}>\r\n                        <ExitToAppIcon className={classes.logoutIcon} />\r\n                    </IconButton>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(withRouter(Navbar));","const styles = {\r\n    container: {\r\n        display: \"flex\",\r\n        textDecoration: \"none\",\r\n        color: \"white\",\r\n        margin: \"1rem\",\r\n        backgroundColor: \"#2b2c2c\",\r\n        borderRadius: \"8px\",\r\n        transition: \"all 0.3s ease-in-out\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#333533\"\r\n        }\r\n    },\r\n    item: {\r\n        height: \"64px\",\r\n    },\r\n    name: {\r\n        width: \"7rem\",\r\n        fontFamily: \"Ubuntu\",\r\n        fontWeight: 300,\r\n        display: \"flex\",\r\n        justifyContent: \"start\",\r\n    },\r\n    create: {\r\n        fontFamily: \"Ubuntu\",\r\n        color: \"rgba(255, 255, 255, 0.7)\",\r\n        display: \"flex\",\r\n        justifyContent: \"end\",\r\n    },\r\n    complete: {\r\n        fontFamily: \"Ubuntu\",\r\n        color: \"rgba(255, 255, 255, 0.7)\",\r\n        marginLeft: \"3rem\",\r\n        display: \"flex\",\r\n        justifyContent: \"end\",\r\n    }\r\n};\r\n\r\nexport default styles;","import { Link } from \"react-router-dom\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from \"../styles/TodoStyles\";\r\n\r\nfunction Todo(props) {\r\n    const { name, id, task, classes, published } = props;\r\n\r\n    // Przekształcenie daty na DD-MM-RRRR\r\n    const date = published.substr(0, 10).split(\"-\").reverse().join(\"-\");\r\n\r\n    // Liczba zadań zrobiony oraz niezrobionych\r\n    const completed = task.filter(t => t.isDone === true).length;\r\n    const uncompleted = task.filter(t => t.isDone === false).length;\r\n\r\n    return (\r\n        <div>\r\n            <Link to={`/lists/${id}`} className={classes.container}>\r\n                <ListItem className={classes.item}>\r\n                    <ListItemText>\r\n                        <p className={classes.name}>{name}</p>\r\n                    </ListItemText>\r\n                    <ListItemText>\r\n                        <p className={classes.create}>Created at: {date} </p>\r\n                    </ListItemText>\r\n                    <ListItemText>\r\n                        <p className={classes.complete}>Completed: {completed} Uncompleted at: {uncompleted} All: {task.length}</p>\r\n                    </ListItemText>\r\n                </ListItem>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Todo);","const styles = function styles(theme) {\r\n    return {\r\n        box: {\r\n            height: \"60px\",\r\n            width: \"520px\",\r\n            marginTop: \"-0.8rem\"\r\n        },\r\n        taskInput: {\r\n            marginTop: \"0.3rem\",\r\n            color: \"rgba(255,255,255, 0.8)\",\r\n            backgroundColor: \"inherit\",\r\n            border: \"none\",\r\n            borderBottom: \"1px solid #faa307\",\r\n            width: \"100%\",\r\n        },\r\n        checkbox: {\r\n            margin: \"0.3rem 0 0 -1rem\",\r\n            '&$checked': {\r\n                color: \"green\"\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default styles;","// import { useState } from \"react\";\r\n\r\nimport useToggleState from \"../hooks/useToggleState\";\r\nimport useInputState from \"../hooks/useInputState\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport styles from \"../styles/TaskStyles\";\r\n\r\nfunction Task(props) {\r\n    const { name, isDone, classes, } = props;\r\n    const [taskIsDone, toggleTaskIsDone] = useToggleState(isDone);\r\n    const [editedTask, setEditedTask] = useInputState(name);\r\n\r\n    // const { id, tasks, setTasks } = props;\r\n    // const [taskHelper, setTaskHelper] = useState({});\r\n    // const handleEdit = () => {\r\n    //     const name = editedTask;\r\n    //     const isDone = taskIsDone;\r\n    //     const id = props.id;\r\n    //     setTaskHelper({ name, isDone, id })\r\n\r\n    //     if (taskHelper.id === tasks.map(t => t.id)) {\r\n    //         return\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <ListItem className={classes.box}>\r\n            <Checkbox\r\n                tabIndex={-1}\r\n                checked={taskIsDone}\r\n                onClick={toggleTaskIsDone}\r\n                className={classes.checkbox}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"task\"\r\n                value={editedTask}\r\n                onChange={setEditedTask}\r\n                className={classes.taskInput}\r\n            />\r\n            <IconButton aria-label=\"Edit\"\r\n            // onClick={handleEdit}\r\n            >\r\n                <EditIcon />\r\n            </IconButton>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Task);","import { createContext, useState } from \"react\";\r\n\r\nimport useInputState from \"../hooks/useInputState\";\r\nimport useToggleState from \"../hooks/useToggleState\";\r\n\r\nexport const TodoListContext = createContext();\r\n\r\nexport function TodosProvider(props) {\r\n    // Podstawowa lista zadań\r\n    const [todoList, setTodoList] = useState({ name: \"\", task: [] });\r\n    // Zadania dodawane podczas tworzenia listy\r\n    const [tasks, setTasks] = useState([]);\r\n    // Ustawienie nazwy listy\r\n    const [listName, setListName, resetListName] = useInputState(\"\");\r\n    // Aktywacja formularza do tworzenia listy\r\n    const [isActive, toggleActive] = useToggleState(false);\r\n    // Wszystkie listy pobrane z serwera\r\n    const [allList, setAllList] = useState([]);\r\n    // Stan przechowywujący format daty dodania zadania\r\n    const [published, setPublished] = useState(\"\");\r\n    // Stan boolean, zmienia url do żądania (asc, desc)\r\n    const [isSorted, toggleIsSorted] = useToggleState(false);\r\n\r\n    return (\r\n        <TodoListContext.Provider value={{\r\n            todoList, setTodoList,\r\n            tasks, setTasks,\r\n            listName, setListName, resetListName,\r\n            isActive, toggleActive,\r\n            allList, setAllList,\r\n            published, setPublished,\r\n            isSorted, toggleIsSorted\r\n        }}>\r\n            {props.children}\r\n        </TodoListContext.Provider>\r\n    );\r\n};","const styles = {\r\n    container: {\r\n        backgroundColor: \"#2b2c2c\",\r\n        width: \"500px\",\r\n    },\r\n    listInputBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n    listInput: {\r\n        borderRadius: \"0.3rem\",\r\n        border: \"none\",\r\n        width: \"100%\",\r\n        margin: \"0.8rem\",\r\n        height: \"20px\",\r\n        outline: \"none\"\r\n    },\r\n    divider: {\r\n        backgroundColor: \"#faa307\",\r\n        height: \"0.13rem\",\r\n        margin: \"0.7rem 1rem\",\r\n        borderRadius: \"20px\",\r\n    },\r\n    taskInput: {\r\n        marginTop: \"1rem\",\r\n        color: \"rgba(255,255,255, 0.5)\",\r\n        backgroundColor: \"inherit\",\r\n        border: \"none\",\r\n        borderBottom: \"1px solid #faa307\",\r\n        width: \"87.5%\",\r\n        outline: \"none\"\r\n    },\r\n    checkbox: {\r\n        marginTop: \"0.3rem\",\r\n    },\r\n    buttonBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"end\",\r\n        marginTop: \"0.6rem\"\r\n    },\r\n    addBtn: {\r\n        marginRight: \"0.8rem\",\r\n        height: \"1.7rem\",\r\n        color: \"white\",\r\n        padding: \"0 1.7rem\",\r\n        backgroundColor: \"#faa307\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#fab610\",\r\n        }\r\n    },\r\n    cancelBtn: {\r\n        marginRight: \"1.3rem\",\r\n        height: \"1.7rem\",\r\n        padding: \"0 0.7rem\",\r\n    },\r\n    buttonBox2: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"2.5rem\"\r\n    },\r\n    saveBtn: {\r\n        marginRight: \"0.8rem\",\r\n        backgroundColor: \"#faa307\",\r\n        padding: \"0.4rem 1.8rem \",\r\n        marginBottom: \"1rem\",\r\n        color: \"white\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#fab610\",\r\n        }\r\n    },\r\n    cancelBtn2: {\r\n        color: \"#faa307\",\r\n        textDecoration: \"none\",\r\n        fontSize: \"1.6rem\",\r\n        marginLeft: \"0.9rem\",\r\n        \"&:hover\": {\r\n            color: \"#fab610\",\r\n        }\r\n    },\r\n    deleteBtn: {\r\n        marginRight: \"0.8rem\",\r\n        padding: \"0.4rem 1.8rem \",\r\n        marginBottom: \"1rem\",\r\n        color: \"white\",\r\n    }\r\n};\r\n\r\nexport default styles;","import { memo, useState, useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport Task from \"./Task\";\r\nimport useInputState from '../hooks/useInputState';\r\nimport useToggleState from \"../hooks/useToggleState\";\r\nimport { TodoListContext } from \"../contexts/TodosContext\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from \"../styles/NewFormStyles\";\r\n\r\nfunction NewForm(props) {\r\n    const { classes, allList, setAllList } = props;\r\n    const [isDone, toggleIsDone] = useState(false);\r\n    const [taskName, setTaskName, resetTaskName] = useInputState(\"\");\r\n    const [isAlertTask, toggleAlertTask] = useToggleState(false);\r\n    const [isAlertListName, toggleAlertListName] = useToggleState(false);\r\n    const {\r\n        todoList, setTodoList,\r\n        tasks, setTasks,\r\n        listName, setListName, resetListName,\r\n        toggleActive,\r\n    } = useContext(TodoListContext);\r\n\r\n    const addTask = () => {\r\n        if (taskName.length > 0) {\r\n            const name = taskName;\r\n            setTasks([...tasks, { name, isDone }]);\r\n            setTodoList({ task: [...todoList.task, ...tasks] });\r\n            resetTaskName();\r\n            toggleIsDone(false);\r\n        } else {\r\n            toggleAlertTask();\r\n        };\r\n    };\r\n\r\n    const cancelTasks = () => {\r\n        setTasks([]);\r\n    };\r\n\r\n    const handleCancelList = () => {\r\n        cancelTasks();\r\n        toggleActive();\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        if (listName.length > 0) {\r\n            setTodoList({ ...todoList, name: listName });\r\n\r\n            const name = listName;\r\n            const task = tasks;\r\n            const jwt = window.localStorage.getItem(\"jwt\");\r\n            const url = \"https://recruitment.ultimate.systems/to-do-lists\";\r\n            const res = await axios.post(url, { name, task }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${jwt}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n            handleRes(res);\r\n            handleCancelList();\r\n            resetListName();\r\n        } else {\r\n            toggleAlertListName();\r\n        };\r\n    };\r\n\r\n    const handleRes = (res) => {\r\n        const name = res.data.name\r\n        const id = res.data.id\r\n        const published = res.data.published_at\r\n        const task = res.data.task\r\n\r\n        setAllList([...allList, { name, task, id, published }]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ width: \"100vw\" }}>\r\n                {isAlertTask && (\r\n                    <Alert severity=\"error\" onClose={toggleAlertTask}>Please enter a task</Alert >\r\n                )}\r\n                {isAlertListName && (\r\n                    <Alert severity=\"error\" onClose={toggleAlertListName}>Please enter a list name</Alert >\r\n                )}\r\n            </div>\r\n            <Dialog open={true} style={{ marginBottom: \"15rem\", height: \"100vh\" }}>\r\n                <DialogContent className={classes.container}>\r\n                    <form>\r\n                        <div className={classes.listInputBox}>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter a list name\"\r\n                                name=\"List name\"\r\n                                value={listName}\r\n                                onChange={setListName}\r\n                                className={classes.listInput}\r\n                            />\r\n                        </div>\r\n                        <Divider className={classes.divider} />\r\n                        <div>\r\n                            {tasks.map((task, i) => (\r\n                                <Task {...task} key={i} />\r\n                            ))}\r\n                        </div>\r\n                        <section>\r\n                            <Checkbox\r\n                                tabIndex={-1}\r\n                                checked={isDone}\r\n                                onClick={() => toggleIsDone(!isDone)}\r\n                                className={classes.checkbox}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Task name\"\r\n                                name=\"Task name\"\r\n                                value={taskName}\r\n                                onChange={setTaskName}\r\n                                className={classes.taskInput}\r\n                            />\r\n                        </section>\r\n                        <div className={classes.buttonBox}>\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={cancelTasks} className={classes.cancelBtn}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button variant=\"contained\" onClick={addTask} className={classes.addBtn}>\r\n                                ADD\r\n                            </Button>\r\n                        </div>\r\n                        <div className={classes.buttonBox2}>\r\n                            <Link to=\"/lists\" onClick={handleCancelList} className={classes.cancelBtn2}>\r\n                                Cancel\r\n                            </Link>\r\n                            <Button variant=\"contained\" onClick={handleSave} className={classes.saveBtn}>\r\n                                Save\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(memo(NewForm));","const styles = {\r\n    container: {\r\n        backgroundColor: \"inherit\",\r\n        width: \"800px\",\r\n        border: \"none\",\r\n        boxShadow: \"none\",\r\n    },\r\n    addBtnBox: {\r\n        position: \"fixed\",\r\n        right: \"26rem\",\r\n        bottom: \"2rem\",\r\n    },\r\n    addBtn: {\r\n        color: \"white\",\r\n        fontSize: \"4rem\",\r\n        backgroundColor: \"#faa307\",\r\n        borderRadius: \"50%\",\r\n        transition: \"all 0.3s ease-in-out\",\r\n        \"&:hover\": {\r\n            transform: \"scale(1.2)\"\r\n        }\r\n    },\r\n    inputsAbove: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginBottom: \"1rem\"\r\n    },\r\n    sortBtn: {\r\n        backgroundColor: \"white\",\r\n        padding: \"0.3rem 2rem\",\r\n        marginRight: \"1rem\",\r\n        borderRadius: \"8px\",\r\n    },\r\n    searchInput: {\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"8px\",\r\n        paddingLeft: \"0.5rem\",\r\n        border: \"none\",\r\n        outline: \"none\",\r\n        marginLeft: \"1rem\",\r\n        transition: \"all 0.3s ease-in-out\",\r\n        width: \"20%\",\r\n        \"&:focus\": {\r\n            width: \"30%\"\r\n        },\r\n        \"&:hover\": {\r\n            width: \"30%\"\r\n        }\r\n    }\r\n};\r\n\r\nexport default styles;","import React, { useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Todo from \"./Todo\";\r\nimport NewForm from \"./NewForm\";\r\nimport { TodoListContext } from \"../contexts/TodosContext\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from \"../styles/TodoListStyles\";\r\n\r\nfunction TodoList(props) {\r\n    const { classes } = props;\r\n    const { isActive, toggleActive,\r\n        allList, setAllList,\r\n        published, setPublished,\r\n        isSorted, toggleIsSorted\r\n    } = useContext(TodoListContext);\r\n\r\n    // Piersze renderowanie listy\r\n    useEffect(() => {\r\n        const jwt = window.localStorage.getItem(\"jwt\");\r\n        const url = \"https://recruitment.ultimate.systems/to-do-lists\";\r\n        axios.get(url, {\r\n            headers: {\r\n                Authorization: `Bearer ${jwt}`,\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => {\r\n                setAllList(res.data)\r\n                handlePublished(res)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    // Sortowanie listy\r\n    const resToSorted = () => {\r\n        const toggleUrl = () => {\r\n            if (isSorted) return \"https://recruitment.ultimate.systems/to-do-lists?_sort=id:ASC\";\r\n            return \"https://recruitment.ultimate.systems/to-do-lists?_sort=id:DESC\";\r\n\r\n        };\r\n\r\n        const jwt = window.localStorage.getItem(\"jwt\");\r\n        axios.get(toggleUrl(), {\r\n            headers: {\r\n                Authorization: `Bearer ${jwt}`,\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => {\r\n                setAllList(res.data)\r\n                handlePublished(res)\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        toggleIsSorted();\r\n    };\r\n\r\n    // Niweluje błąd dotyczący published_at = undefined\r\n    const handlePublished = (res) => {\r\n        for (let i = 0; i < res.data.length; i++) {\r\n            const oneList = res.data[i]\r\n            setPublished(oneList.published_at)\r\n        };\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n            {isActive\r\n                ? <NewForm\r\n                    allList={allList}\r\n                    setAllList={setAllList}\r\n                />\r\n                : (\r\n                    <Grid item>\r\n                        <Paper className={classes.container}>\r\n                            <div className={classes.inputsAbove}>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"Search\"\r\n                                    placeholder=\"Search\"\r\n                                    className={classes.searchInput}\r\n                                />\r\n                                <Button variant=\"contained\" onClick={resToSorted} className={classes.sortBtn}>Sort</Button>\r\n                            </div>\r\n                            <main>\r\n                                <List>\r\n                                    {allList.map((item, i) => (\r\n                                        <Todo key={i} {...item} published={published} />\r\n                                    ))}\r\n                                </List>\r\n                            </main>\r\n                            <div className={classes.addBtnBox}>\r\n                                <IconButton onClick={toggleActive}>\r\n                                    <AddCircleIcon className={classes.addBtn} />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                )\r\n            }\r\n        </Grid >\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(TodoList);","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport Task from \"./Task\";\r\nimport useInputState from \"../hooks/useInputState\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from \"../styles/NewFormStyles\";\r\n\r\nfunction TodoElement(props) {\r\n    const { classes, history } = props;\r\n    const { id } = props.match.params;\r\n\r\n    const [listName, setListName] = useState(\"\");\r\n    const [tasks, setTasks] = useState([]);\r\n    const [individualTaskName, setIndividualTaskName, resetTaskName] = useInputState(\"\");\r\n    const [newTask, setNewTask] = useState([]);\r\n    const [isDone, setIsDone] = useState(false);\r\n\r\n    // React Hook useEffect has a missing dependency...\r\n    useEffect(() => {\r\n        const jwt = window.localStorage.getItem(\"jwt\");\r\n        const url = `https://recruitment.ultimate.systems/to-do-lists/${id}`;\r\n        function fetchData() {\r\n            axios.get(url, {\r\n                headers: {\r\n                    Authorization: `Bearer ${jwt}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n                .then(res => {\r\n                    setListName(res.data.name)\r\n                    setTasks([...res.data.task])\r\n                })\r\n                .catch(err => console.log(err))\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const saveList = async () => {\r\n        const name = listName;\r\n        const task = tasks;\r\n        const jwt = window.localStorage.getItem(\"jwt\");\r\n        const url = `https://recruitment.ultimate.systems/to-do-lists/${id}`;\r\n        await axios.put(url, { name, task }, {\r\n            headers: {\r\n                Authorization: `Bearer ${jwt}`,\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n        history.push(\"/lists\");\r\n    };\r\n\r\n    const deleteList = async () => {\r\n        const jwt = window.localStorage.getItem(\"jwt\");\r\n        const url = `https://recruitment.ultimate.systems/to-do-lists/${id}`;\r\n        await axios.delete(url, {\r\n            headers: {\r\n                Authorization: `Bearer ${jwt}`,\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n        history.push(\"/lists\");\r\n    };\r\n\r\n    const cancel = () => {\r\n        history.push(\"/lists\");\r\n    };\r\n\r\n    const addTask = () => {\r\n        if (individualTaskName.length > 0) {\r\n            const name = individualTaskName;\r\n            setNewTask({ name, isDone })\r\n            setTasks([...tasks, { name, isDone }]);\r\n            setIsDone(false);\r\n            resetTaskName();\r\n        };\r\n    };\r\n\r\n    return (\r\n        <Dialog open={true} style={{ marginBottom: \"15rem\", height: \"100vh\" }}>\r\n            <DialogContent className={classes.container}>\r\n                <form>\r\n                    <div className={classes.listInputBox}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"List name\"\r\n                            defaultValue={listName}\r\n                            onChange={evt => setListName(evt.target.value)}\r\n                            className={classes.listInput}\r\n                        />\r\n                    </div>\r\n                    <Divider className={classes.divider} />\r\n                    <div>\r\n                        {tasks.map((task, i) => (\r\n                            <Task key={i} {...task} tasks={tasks} setTasks={setTasks} />\r\n                        ))}\r\n                    </div>\r\n                    <div>\r\n                        <Checkbox\r\n                            tabIndex={-1}\r\n                            className={classes.checkbox}\r\n                            checked={isDone}\r\n                            onChange={() => setIsDone(!isDone)}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Task name\"\r\n                            name=\"Task name\"\r\n                            value={individualTaskName}\r\n                            onChange={setIndividualTaskName}\r\n                            className={classes.taskInput}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.buttonBox}>\r\n                        <Button variant=\"contained\" color=\"secondary\" className={classes.cancelBtn} onClick={cancel}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className={classes.addBtn} onClick={addTask}>\r\n                            ADD\r\n                        </Button>\r\n                    </div>\r\n                    <div className={classes.buttonBox2}>\r\n                        <Link to=\"/lists\" className={classes.cancelBtn2}>\r\n                            Cancel\r\n                        </Link>\r\n                        <Button variant=\"contained\" color=\"secondary\" className={classes.deleteBtn} onClick={deleteList}>\r\n                            Delete List\r\n                        </Button>\r\n                        <Button variant=\"contained\" className={classes.saveBtn} onClick={saveList}>\r\n                            Save\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(TodoElement);","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Register from \"./components/Register\";\r\nimport Login from \"./components/Login\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport TodoElement from \"./components/TodoElement\";\r\n\r\nfunction TodoApp() {\r\n    return (\r\n        <div style={{ background: \"rgba(0,0,0,0.9)\", minHeight: \"100vh\", height: \"100%\" }} >\r\n            <Navbar />\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path=\"/\"\r\n                    render={(routeProps) => <Login {...routeProps} />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/login\"\r\n                    render={(routeProps) => <Login {...routeProps} />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/register\"\r\n                    render={(routeProps) => <Register {...routeProps} />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/lists\"\r\n                    render={(routeProps) => <TodoList {...routeProps} />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/lists/:id\"\r\n                    render={(routeProps) => <TodoElement {...routeProps} />}\r\n                />\r\n            </Switch>\r\n        </ div>\r\n    );\r\n};\r\n\r\nexport default TodoApp;","import React from \"react\";\nimport TodoApp from './TodoApp';\nimport { TodosProvider } from \"./contexts/TodosContext\";\n\nfunction App() {\n  return (\n    <div>\n      <TodosProvider>\n        <TodoApp />\n      </TodosProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}